function cheat {
	 curl "cheat.sh/$1"
}

# emacs
function killemacs {
    for pattern in emacs Emacs; do
	for a in $(ps aux | grep $pattern | grep -v grep | grep -v emacs.d | grep -v AppCleaner | awk '{print $2}'); do
	echo "Killing pid : $a"
	kill -3 $a &>/dev/null;
	sleep 1
	kill -2 $a &>/dev/null;
	echo "Done."
	done
    done
}

# Pygmentize less
function cless () {
    pygmentize -gf terminal "$1" | less  -R
}

function url2pdf {
	 chromium --headless --disable-gpu --sleepMillis=1000 --print-to-pdf=url.pdf "${1}"
}

parse_git_branch() {
    git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}

# ###########################################
# # utility functions
# ###########################################

# exports and reset proxy at unal
function set_unal_proxy_helper {
    PROXY="$1"
    PROXY_PORT="$2"
    PROXY_USER="$3"
    PROXY_PASSWD="$4"
    PROXY="$PROXY"
    PRE=""
    if [[ "$PROXY" ]]; then
        PRE="http://"
    fi
    if [[ "$PROXY_PORT" ]]; then
        PROXY="$PROXY:$PROXY_PORT"
    fi
    if [[ "$PROXY_USER" ]] && [[ "$PROXY_PASSWD" ]]; then
        PROXY="$PROXY_USER:$PROXY_PASSWD@$PROXY"
    fi
    export PROXY="$PROXY"
    export http_proxy="$PRE$PROXY"
    export https_proxy="$PRE$PROXY"
    export ftp_proxy="$http_proxy"
    export RSYNC_PROXY="$PROXY"
    export all_proxy="$PRE$PROXY"
    export ALL_PROXY="$all_proxy"
    export HTTP_PROXY="$http_proxy"
    export HTTPS_PROXY="$https_proxy"
}

function reset_proxy {
    set_unal_proxy_helper "" "" "" ""
}

function set_unal_proxyapp_auth {
    # PROXY_AUTH sets PROXY_USER and PROXY_PASSWD and is private
    echo "Decrypting file to read proxy credentials ..."
    source <( gpg --decrypt ~/.PROXY_AUTH.gpg )
    set_unal_proxy_helper "proxyapp.unal.edu.co" "8080" "$PROXY_USER" "$PROXY_PASSWD"
}

function set_unal_proxy_cntlm {
    set_unal_proxy_helper "192.168.10.1" "3128" "" ""
}

function set_unal_proxyapp {
    set_unal_proxy_helper "proxyapp.unal.edu.co" "8080" "" ""
}



shrug() { echo "¯\_(ツ)_/¯"; }
